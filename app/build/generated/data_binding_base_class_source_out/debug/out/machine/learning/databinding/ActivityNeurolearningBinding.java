// Generated by view binder compiler. Do not edit!
package machine.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import machine.learning.R;

public final class ActivityNeurolearningBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final TextView a;

  @NonNull
  public final ImageView aImg;

  @NonNull
  public final TextView backpropagation;

  @NonNull
  public final TextView backpropagationText1;

  @NonNull
  public final TextView backpropagationText10;

  @NonNull
  public final TextView backpropagationText11;

  @NonNull
  public final TextView backpropagationText12;

  @NonNull
  public final TextView backpropagationText13;

  @NonNull
  public final TextView backpropagationText14;

  @NonNull
  public final TextView backpropagationText2;

  @NonNull
  public final TextView backpropagationText3;

  @NonNull
  public final TextView backpropagationText4;

  @NonNull
  public final TextView backpropagationText5;

  @NonNull
  public final TextView backpropagationText6;

  @NonNull
  public final TextView backpropagationText7;

  @NonNull
  public final TextView backpropagationText8;

  @NonNull
  public final TextView backpropagationText9;

  @NonNull
  public final TextView c;

  @NonNull
  public final ImageView cImg;

  @NonNull
  public final TextView chainRule;

  @NonNull
  public final TextView chainRuleExplain;

  @NonNull
  public final ImageView chainRuleExplainImg;

  @NonNull
  public final ImageView chainRuleImg;

  @NonNull
  public final TextView connections;

  @NonNull
  public final ImageView connectionsImg;

  @NonNull
  public final TextView der1;

  @NonNull
  public final ImageView der1Img;

  @NonNull
  public final TextView der2;

  @NonNull
  public final ImageView der2Img;

  @NonNull
  public final TextView der3;

  @NonNull
  public final ImageView der3Img;

  @NonNull
  public final TextView diffLog;

  @NonNull
  public final ImageView diffLogImg;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final TextView expressDiff;

  @NonNull
  public final ImageView expressDiffImg;

  @NonNull
  public final FloatingActionButton fabScrollToTop;

  @NonNull
  public final TextView howneurolearning;

  @NonNull
  public final TextView lastNeuro;

  @NonNull
  public final ImageView lastNeuroImg;

  @NonNull
  public final TextView learningRate;

  @NonNull
  public final TextView learningRateText1;

  @NonNull
  public final TextView lossfunction;

  @NonNull
  public final TextView lossfunctionText1;

  @NonNull
  public final TextView lossfunctionText2;

  @NonNull
  public final TextView mse;

  @NonNull
  public final ImageView mseImg;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final TextView neuralnetLearningText1;

  @NonNull
  public final TextView neurolearningMenu1;

  @NonNull
  public final TextView neurolearningMenu2;

  @NonNull
  public final TextView neurolearningMenu3;

  @NonNull
  public final TextView neurolearningMenu4;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final Button themeLayout;

  @NonNull
  public final LinearLayout tipslearningContent;

  @NonNull
  public final TextView updateW;

  @NonNull
  public final ImageView updateWImg;

  @NonNull
  public final TextView z;

  @NonNull
  public final ImageView zImg;

  private ActivityNeurolearningBinding(@NonNull DrawerLayout rootView, @NonNull TextView a,
      @NonNull ImageView aImg, @NonNull TextView backpropagation,
      @NonNull TextView backpropagationText1, @NonNull TextView backpropagationText10,
      @NonNull TextView backpropagationText11, @NonNull TextView backpropagationText12,
      @NonNull TextView backpropagationText13, @NonNull TextView backpropagationText14,
      @NonNull TextView backpropagationText2, @NonNull TextView backpropagationText3,
      @NonNull TextView backpropagationText4, @NonNull TextView backpropagationText5,
      @NonNull TextView backpropagationText6, @NonNull TextView backpropagationText7,
      @NonNull TextView backpropagationText8, @NonNull TextView backpropagationText9,
      @NonNull TextView c, @NonNull ImageView cImg, @NonNull TextView chainRule,
      @NonNull TextView chainRuleExplain, @NonNull ImageView chainRuleExplainImg,
      @NonNull ImageView chainRuleImg, @NonNull TextView connections,
      @NonNull ImageView connectionsImg, @NonNull TextView der1, @NonNull ImageView der1Img,
      @NonNull TextView der2, @NonNull ImageView der2Img, @NonNull TextView der3,
      @NonNull ImageView der3Img, @NonNull TextView diffLog, @NonNull ImageView diffLogImg,
      @NonNull DrawerLayout drawerLayout, @NonNull TextView expressDiff,
      @NonNull ImageView expressDiffImg, @NonNull FloatingActionButton fabScrollToTop,
      @NonNull TextView howneurolearning, @NonNull TextView lastNeuro,
      @NonNull ImageView lastNeuroImg, @NonNull TextView learningRate,
      @NonNull TextView learningRateText1, @NonNull TextView lossfunction,
      @NonNull TextView lossfunctionText1, @NonNull TextView lossfunctionText2,
      @NonNull TextView mse, @NonNull ImageView mseImg, @NonNull NavigationView navView,
      @NonNull TextView neuralnetLearningText1, @NonNull TextView neurolearningMenu1,
      @NonNull TextView neurolearningMenu2, @NonNull TextView neurolearningMenu3,
      @NonNull TextView neurolearningMenu4, @NonNull ScrollView scrollView,
      @NonNull TextView textView1, @NonNull Button themeLayout,
      @NonNull LinearLayout tipslearningContent, @NonNull TextView updateW,
      @NonNull ImageView updateWImg, @NonNull TextView z, @NonNull ImageView zImg) {
    this.rootView = rootView;
    this.a = a;
    this.aImg = aImg;
    this.backpropagation = backpropagation;
    this.backpropagationText1 = backpropagationText1;
    this.backpropagationText10 = backpropagationText10;
    this.backpropagationText11 = backpropagationText11;
    this.backpropagationText12 = backpropagationText12;
    this.backpropagationText13 = backpropagationText13;
    this.backpropagationText14 = backpropagationText14;
    this.backpropagationText2 = backpropagationText2;
    this.backpropagationText3 = backpropagationText3;
    this.backpropagationText4 = backpropagationText4;
    this.backpropagationText5 = backpropagationText5;
    this.backpropagationText6 = backpropagationText6;
    this.backpropagationText7 = backpropagationText7;
    this.backpropagationText8 = backpropagationText8;
    this.backpropagationText9 = backpropagationText9;
    this.c = c;
    this.cImg = cImg;
    this.chainRule = chainRule;
    this.chainRuleExplain = chainRuleExplain;
    this.chainRuleExplainImg = chainRuleExplainImg;
    this.chainRuleImg = chainRuleImg;
    this.connections = connections;
    this.connectionsImg = connectionsImg;
    this.der1 = der1;
    this.der1Img = der1Img;
    this.der2 = der2;
    this.der2Img = der2Img;
    this.der3 = der3;
    this.der3Img = der3Img;
    this.diffLog = diffLog;
    this.diffLogImg = diffLogImg;
    this.drawerLayout = drawerLayout;
    this.expressDiff = expressDiff;
    this.expressDiffImg = expressDiffImg;
    this.fabScrollToTop = fabScrollToTop;
    this.howneurolearning = howneurolearning;
    this.lastNeuro = lastNeuro;
    this.lastNeuroImg = lastNeuroImg;
    this.learningRate = learningRate;
    this.learningRateText1 = learningRateText1;
    this.lossfunction = lossfunction;
    this.lossfunctionText1 = lossfunctionText1;
    this.lossfunctionText2 = lossfunctionText2;
    this.mse = mse;
    this.mseImg = mseImg;
    this.navView = navView;
    this.neuralnetLearningText1 = neuralnetLearningText1;
    this.neurolearningMenu1 = neurolearningMenu1;
    this.neurolearningMenu2 = neurolearningMenu2;
    this.neurolearningMenu3 = neurolearningMenu3;
    this.neurolearningMenu4 = neurolearningMenu4;
    this.scrollView = scrollView;
    this.textView1 = textView1;
    this.themeLayout = themeLayout;
    this.tipslearningContent = tipslearningContent;
    this.updateW = updateW;
    this.updateWImg = updateWImg;
    this.z = z;
    this.zImg = zImg;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNeurolearningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNeurolearningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_neurolearning, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNeurolearningBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.a;
      TextView a = ViewBindings.findChildViewById(rootView, id);
      if (a == null) {
        break missingId;
      }

      id = R.id.a_img;
      ImageView aImg = ViewBindings.findChildViewById(rootView, id);
      if (aImg == null) {
        break missingId;
      }

      id = R.id.backpropagation;
      TextView backpropagation = ViewBindings.findChildViewById(rootView, id);
      if (backpropagation == null) {
        break missingId;
      }

      id = R.id.backpropagation_text1;
      TextView backpropagationText1 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText1 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text10;
      TextView backpropagationText10 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText10 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text11;
      TextView backpropagationText11 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText11 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text12;
      TextView backpropagationText12 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText12 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text13;
      TextView backpropagationText13 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText13 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text14;
      TextView backpropagationText14 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText14 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text2;
      TextView backpropagationText2 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText2 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text3;
      TextView backpropagationText3 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText3 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text4;
      TextView backpropagationText4 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText4 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text5;
      TextView backpropagationText5 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText5 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text6;
      TextView backpropagationText6 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText6 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text7;
      TextView backpropagationText7 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText7 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text8;
      TextView backpropagationText8 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText8 == null) {
        break missingId;
      }

      id = R.id.backpropagation_text9;
      TextView backpropagationText9 = ViewBindings.findChildViewById(rootView, id);
      if (backpropagationText9 == null) {
        break missingId;
      }

      id = R.id.c;
      TextView c = ViewBindings.findChildViewById(rootView, id);
      if (c == null) {
        break missingId;
      }

      id = R.id.c_img;
      ImageView cImg = ViewBindings.findChildViewById(rootView, id);
      if (cImg == null) {
        break missingId;
      }

      id = R.id.chain_rule;
      TextView chainRule = ViewBindings.findChildViewById(rootView, id);
      if (chainRule == null) {
        break missingId;
      }

      id = R.id.chain_rule_explain;
      TextView chainRuleExplain = ViewBindings.findChildViewById(rootView, id);
      if (chainRuleExplain == null) {
        break missingId;
      }

      id = R.id.chain_rule_explain_img;
      ImageView chainRuleExplainImg = ViewBindings.findChildViewById(rootView, id);
      if (chainRuleExplainImg == null) {
        break missingId;
      }

      id = R.id.chain_rule_img;
      ImageView chainRuleImg = ViewBindings.findChildViewById(rootView, id);
      if (chainRuleImg == null) {
        break missingId;
      }

      id = R.id.connections;
      TextView connections = ViewBindings.findChildViewById(rootView, id);
      if (connections == null) {
        break missingId;
      }

      id = R.id.connections_img;
      ImageView connectionsImg = ViewBindings.findChildViewById(rootView, id);
      if (connectionsImg == null) {
        break missingId;
      }

      id = R.id.der_1;
      TextView der1 = ViewBindings.findChildViewById(rootView, id);
      if (der1 == null) {
        break missingId;
      }

      id = R.id.der_1_img;
      ImageView der1Img = ViewBindings.findChildViewById(rootView, id);
      if (der1Img == null) {
        break missingId;
      }

      id = R.id.der_2;
      TextView der2 = ViewBindings.findChildViewById(rootView, id);
      if (der2 == null) {
        break missingId;
      }

      id = R.id.der_2_img;
      ImageView der2Img = ViewBindings.findChildViewById(rootView, id);
      if (der2Img == null) {
        break missingId;
      }

      id = R.id.der_3;
      TextView der3 = ViewBindings.findChildViewById(rootView, id);
      if (der3 == null) {
        break missingId;
      }

      id = R.id.der_3_img;
      ImageView der3Img = ViewBindings.findChildViewById(rootView, id);
      if (der3Img == null) {
        break missingId;
      }

      id = R.id.diff_log;
      TextView diffLog = ViewBindings.findChildViewById(rootView, id);
      if (diffLog == null) {
        break missingId;
      }

      id = R.id.diff_log_img;
      ImageView diffLogImg = ViewBindings.findChildViewById(rootView, id);
      if (diffLogImg == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.express_diff;
      TextView expressDiff = ViewBindings.findChildViewById(rootView, id);
      if (expressDiff == null) {
        break missingId;
      }

      id = R.id.express_diff_img;
      ImageView expressDiffImg = ViewBindings.findChildViewById(rootView, id);
      if (expressDiffImg == null) {
        break missingId;
      }

      id = R.id.fabScrollToTop;
      FloatingActionButton fabScrollToTop = ViewBindings.findChildViewById(rootView, id);
      if (fabScrollToTop == null) {
        break missingId;
      }

      id = R.id.howneurolearning;
      TextView howneurolearning = ViewBindings.findChildViewById(rootView, id);
      if (howneurolearning == null) {
        break missingId;
      }

      id = R.id.last_neuro;
      TextView lastNeuro = ViewBindings.findChildViewById(rootView, id);
      if (lastNeuro == null) {
        break missingId;
      }

      id = R.id.last_neuro_img;
      ImageView lastNeuroImg = ViewBindings.findChildViewById(rootView, id);
      if (lastNeuroImg == null) {
        break missingId;
      }

      id = R.id.learning_rate;
      TextView learningRate = ViewBindings.findChildViewById(rootView, id);
      if (learningRate == null) {
        break missingId;
      }

      id = R.id.learning_rate_text1;
      TextView learningRateText1 = ViewBindings.findChildViewById(rootView, id);
      if (learningRateText1 == null) {
        break missingId;
      }

      id = R.id.lossfunction;
      TextView lossfunction = ViewBindings.findChildViewById(rootView, id);
      if (lossfunction == null) {
        break missingId;
      }

      id = R.id.lossfunction_text1;
      TextView lossfunctionText1 = ViewBindings.findChildViewById(rootView, id);
      if (lossfunctionText1 == null) {
        break missingId;
      }

      id = R.id.lossfunction_text2;
      TextView lossfunctionText2 = ViewBindings.findChildViewById(rootView, id);
      if (lossfunctionText2 == null) {
        break missingId;
      }

      id = R.id.mse;
      TextView mse = ViewBindings.findChildViewById(rootView, id);
      if (mse == null) {
        break missingId;
      }

      id = R.id.mse_img;
      ImageView mseImg = ViewBindings.findChildViewById(rootView, id);
      if (mseImg == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.neuralnet_learning_text1;
      TextView neuralnetLearningText1 = ViewBindings.findChildViewById(rootView, id);
      if (neuralnetLearningText1 == null) {
        break missingId;
      }

      id = R.id.neurolearning_menu1;
      TextView neurolearningMenu1 = ViewBindings.findChildViewById(rootView, id);
      if (neurolearningMenu1 == null) {
        break missingId;
      }

      id = R.id.neurolearning_menu2;
      TextView neurolearningMenu2 = ViewBindings.findChildViewById(rootView, id);
      if (neurolearningMenu2 == null) {
        break missingId;
      }

      id = R.id.neurolearning_menu3;
      TextView neurolearningMenu3 = ViewBindings.findChildViewById(rootView, id);
      if (neurolearningMenu3 == null) {
        break missingId;
      }

      id = R.id.neurolearning_menu4;
      TextView neurolearningMenu4 = ViewBindings.findChildViewById(rootView, id);
      if (neurolearningMenu4 == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.themeLayout;
      Button themeLayout = ViewBindings.findChildViewById(rootView, id);
      if (themeLayout == null) {
        break missingId;
      }

      id = R.id.tipslearning_content;
      LinearLayout tipslearningContent = ViewBindings.findChildViewById(rootView, id);
      if (tipslearningContent == null) {
        break missingId;
      }

      id = R.id.update_w;
      TextView updateW = ViewBindings.findChildViewById(rootView, id);
      if (updateW == null) {
        break missingId;
      }

      id = R.id.update_w_img;
      ImageView updateWImg = ViewBindings.findChildViewById(rootView, id);
      if (updateWImg == null) {
        break missingId;
      }

      id = R.id.z;
      TextView z = ViewBindings.findChildViewById(rootView, id);
      if (z == null) {
        break missingId;
      }

      id = R.id.z_img;
      ImageView zImg = ViewBindings.findChildViewById(rootView, id);
      if (zImg == null) {
        break missingId;
      }

      return new ActivityNeurolearningBinding((DrawerLayout) rootView, a, aImg, backpropagation,
          backpropagationText1, backpropagationText10, backpropagationText11, backpropagationText12,
          backpropagationText13, backpropagationText14, backpropagationText2, backpropagationText3,
          backpropagationText4, backpropagationText5, backpropagationText6, backpropagationText7,
          backpropagationText8, backpropagationText9, c, cImg, chainRule, chainRuleExplain,
          chainRuleExplainImg, chainRuleImg, connections, connectionsImg, der1, der1Img, der2,
          der2Img, der3, der3Img, diffLog, diffLogImg, drawerLayout, expressDiff, expressDiffImg,
          fabScrollToTop, howneurolearning, lastNeuro, lastNeuroImg, learningRate,
          learningRateText1, lossfunction, lossfunctionText1, lossfunctionText2, mse, mseImg,
          navView, neuralnetLearningText1, neurolearningMenu1, neurolearningMenu2,
          neurolearningMenu3, neurolearningMenu4, scrollView, textView1, themeLayout,
          tipslearningContent, updateW, updateWImg, z, zImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
